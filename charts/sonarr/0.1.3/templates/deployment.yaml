apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicas }}
  strategy:
    type: {{ .Values.controller.strategy }}
    {{- if eq .Values.controller.strategy "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.controller.rollingUpdate.surge }}
      maxUnavailable: {{ .Values.controller.rollingUpdate.unavailable }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              protocol: TCP
              containerPort: 8989
          env:
            {{- range $name, $value := .Values.env }}
            - name: {{ quote $name }}
              value: {{ quote $value }}
            {{- end }}
            {{- range $envList := .Values.envList }}
            {{- if and $envList.name $envList.value }}
            - name: {{ $envList.name }}
              value: {{ $envList.value | quote }}
            {{- else }}
              {{- fail "Please specify name/value for environment variable" }}
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: sonarr-config
              mountPath: {{ .Values.persistence.config.mountPath }}
            - name: sonarr-tv
              mountPath: {{ .Values.persistence.tv.mountPath }}
            - name: sonarr-downloads
              mountPath: {{ .Values.persistence.downloads.mountPath }}
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.probes.startup.path }}
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          {{- end }}

      volumes:
        - name: sonarr-config
          {{- if .Values.persistence.config.enabled }}
          {{- if eq .Values.persistence.config.type "pvc" }}
          persistentVolumeClaim:
            claimName: sonarr-config-pvc
          {{- else if eq .Values.persistence.config.type "hostPath" }}
          hostPath:
            path: {{ .Values.persistence.config.hostPath }}
            type: {{ .Values.persistence.config.hostPathType }}
          {{- else }}
            {{- fail (printf "Not a valid persistence.type (%s)" .Values.persistence.config.type) }}
          {{- end }}
          {{- end }}
        - name: sonarr-tv
          {{- if .Values.persistence.tv.enabled }}
          {{- if eq .Values.persistence.tv.type "pvc" }}
          persistentVolumeClaim:
            claimName: sonarr-tv-pvc
          {{- else if eq .Values.persistence.tv.type "hostPath" }}
          hostPath:
            path: {{ .Values.persistence.tv.hostPath }}
            type: {{ .Values.persistence.tv.hostPathType }}
          {{- else }}
            {{- fail (printf "Not a valid persistence.type (%s)" .Values.persistence.tv.type) }}
          {{- end }}
          {{- end }}
        - name: sonarr-downloads
          {{- if .Values.persistence.downloads.enabled }}
          {{- if eq .Values.persistence.downloads.type "pvc" }}
          persistentVolumeClaim:
            claimName: sonarr-downloads-pvc
          {{- else if eq .Values.persistence.downloads.type "hostPath" }}
          hostPath:
            path: {{ .Values.persistence.downloads.hostPath }}
            type: {{ .Values.persistence.downloads.hostPathType }}
          {{- else }}
            {{- fail (printf "Not a valid persistence.type (%s)" .Values.persistence.downloads.type) }}
          {{- end }}
          {{- end }}